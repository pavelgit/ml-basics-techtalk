{"version":3,"file":"static\\development\\pages\\main.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/main.js","webpack:///./source/basic-perceptron-model.js","webpack:///./source/data-provider.js","webpack:///./source/float-slider.js","webpack:///./source/iris-plot.js","webpack:///./source/loss-plot.js","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-plotly.js/factory\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\r\nimport basicPerceptronModel from '../source/basic-perceptron-model';\r\nimport FloatSlider from './../source/float-slider';\r\nimport IrisPlot from '../source/iris-plot';\r\nimport LossPlot from '../source/loss-plot';\r\n\r\nexport default class extends React.Component {\r\n\r\n  state = {\r\n    isClient: false\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IrisPlot />\r\n        <LossPlot />\r\n        <FloatSlider\r\n          rangeLimit={100}\r\n          value={basicPerceptronModel.k}\r\n          onChange={value => { basicPerceptronModel.k = value; this.forceUpdate();}}\r\n        />\r\n        <div>K={basicPerceptronModel.k}</div>\r\n\r\n        <FloatSlider\r\n          rangeLimit={100}\r\n          value={basicPerceptronModel.b}\r\n          onChange={value => { basicPerceptronModel.b = value; this.forceUpdate(); }}\r\n        />\r\n        <div>b={basicPerceptronModel.b}</div>\r\n\r\n        <div>Loss={basicPerceptronModel.evaluateLoss()}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import { trainingExamples } from './data-provider';\r\n\r\nexport default new class BasicPerceptronModel {\r\n\r\n  constructor() {\r\n    this.k = 0;\r\n    this.b = 0;\r\n  }\r\n\r\n  evaluateActivation(v) {\r\n    return 1 / (1 + Math.exp(-v));\r\n  }\r\n\r\n  getClassificationLineY(x) {\r\n    return this.k * x + this.b;\r\n  }\r\n\r\n  evaluate(x, y) {\r\n    const distanceToLine = (x - this.k * ( y - this.b ))/Math.sqrt(1-this.k*this.k);\r\n    console.log(distanceToLine);\r\n    return this.evaluateActivation(distanceToLine);\r\n  }\r\n\r\n  evaluateCost(x, y, category) {\r\n    return Math.abs(this.evaluate(x, y) - category);\r\n  }\r\n\r\n  predict(x, y) {\r\n    return Math.sign(this.evaluate(x, y));\r\n  }\r\n\r\n  evaluateLoss() {\r\n    return trainingExamples.reduce((acc, v) => acc + this.evaluateCost(v.x, v.y, v.category), 0)\r\n  }\r\n\r\n}","const iris2 = [require('./iris2')[0]];\r\n\r\nconst irisSetosaPlotData = {\r\n  x: iris2.filter(v => v.species === 'Iris-setosa').map(v => v.petal_length),\r\n  y: iris2.filter(v => v.species === 'Iris-setosa').map(v => v.petal_width),\r\n  name: 'Iris-setosa',\r\n  mode: 'markers',\r\n  type: 'scatter'\r\n};\r\n\r\nconst irisVersicolorPlotData = {\r\n  x: iris2.filter(v => v.species === 'Iris-versicolor').map(v => v.petal_length),\r\n  y: iris2.filter(v => v.species === 'Iris-versicolor').map(v => v.petal_width),\r\n  name: 'Iris-versicolor',\r\n  mode: 'markers',\r\n  type: 'scatter'\r\n};\r\n\r\nconst trainingExamples = iris2.map(v => (\r\n  {\r\n    x: v.petal_length,\r\n    y: v.petal_width,\r\n    category: v.species === 'Iris-setosa' ? 1 : 0\r\n  }\r\n));\r\n\r\nexport { irisSetosaPlotData, irisVersicolorPlotData, trainingExamples };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class extends React.Component {\r\n\r\n  static propTypes = {\r\n    rangeLimit: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  sliderSteps = 1000;\r\n\r\n  getValue() {\r\n    return Math.round(this.props.value / this.props.rangeLimit * this.sliderSteps);\r\n  }\r\n\r\n  onChange(value) {\r\n    this.props.onChange(value / this.sliderSteps * this.props.rangeLimit);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        style={{width: '100%'}}\r\n        type=\"range\" min={-this.sliderSteps} max={this.sliderSteps}\r\n        value={this.getValue()}\r\n        onChange={e => this.onChange(e.target.value)}\r\n      />\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { irisSetosaPlotData, irisVersicolorPlotData } from '../source/data-provider';\r\nimport basicPerceptronModel from '../source/basic-perceptron-model';\r\nimport createPlotlyComponent from 'react-plotly.js/factory'\r\n\r\nexport default class extends React.Component {\r\n\r\n  state = {\r\n    isClient: false\r\n  };\r\n\r\n  plotLayout = {\r\n    autosize: false,\r\n    width: 800,\r\n    height: 800,\r\n    xaxis: {\r\n      range: [0, 10]\r\n    },\r\n    yaxis: {\r\n      range: [0, 10]\r\n    },\r\n    shapes: []\r\n  };\r\n\r\n  getClassificationLineShape() {\r\n    const x0 = -10;\r\n    const y0 = basicPerceptronModel.getClassificationLineY(x0);\r\n    const x1 = +10;\r\n    const y1 = basicPerceptronModel.getClassificationLineY(x1);\r\n    return {\r\n      type: 'line',\r\n      x0, y0, x1, y1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isClient: true });\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    this.plotLayout.shapes[0] = this.getClassificationLineShape();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isClient) {\r\n      return null;\r\n    }\r\n    const Plot = createPlotlyComponent(Plotly);\r\n    return (\r\n      <Plot\r\n        data={[irisSetosaPlotData, irisVersicolorPlotData]}\r\n        layout={this.plotLayout}\r\n      />\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport basicPerceptronModel from '../source/basic-perceptron-model';\r\nimport createPlotlyComponent from 'react-plotly.js/factory'\r\n\r\nexport default class extends React.Component {\r\n\r\n  state = {\r\n    isClient: false\r\n  };\r\n\r\n  plotLayout = {\r\n    autosize: false,\r\n    width: 800,\r\n    height: 800,\r\n    xaxis: {\r\n      range: [-10, 10]\r\n    },\r\n    yaxis: {\r\n      range: [-10, 10]\r\n    }\r\n  };\r\n\r\n  generateData() {\r\n    const points = [];\r\n    /*for (let k = -100; k < 100; k++) {\r\n      for (let b = -100; b < 100; b++) {\r\n        basicPerceptronModel.k = k;\r\n        basicPerceptronModel.b = b;\r\n        points.push({ x:k, y:b, z: basicPerceptronModel.evaluateLoss() });\r\n      }\r\n    }*/\r\n    return {\r\n      x: points.map(p => p.x),\r\n      y: points.map(p => p.y),\r\n      z: points.map(p => p.z),\r\n      type: 'contour',\r\n      contours: {\r\n        coloring: 'heatmap'\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState({ isClient: true });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isClient) {\r\n      return null;\r\n    }\r\n    const Plot = createPlotlyComponent(Plotly);\r\n    return (\r\n      <Plot\r\n        data={[this.generateData()]}\r\n        layout={this.plotLayout}\r\n      />\r\n    );\r\n  }\r\n\r\n}","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-plotly.js/factory\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAGA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5BA;AACA;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAQA;AACA;AATA;AAAA;AAAA;AAYA;AACA;AAbA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AAAA;AA0BA;AACA;AA3BA;AAAA;AAAA;AA6BA;AACA;AAAA;AAAA;AAAA;AACA;AA/BA;AACA;AADA;AAAA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AAHA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;;;;;;;;;;;;;;;;;;;AASA;AACA;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA3BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAVA;AACA;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AACA;;;;;;AAWA;AACA;AACA;;;;;;;;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AALA;AASA;;;AAGA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAtDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}